/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as StatusSlugIndexRouteImport } from './routes/status/$slug/index'
import { Route as DashboardWorkspacesIndexRouteImport } from './routes/dashboard/workspaces/index'
import { Route as DashboardLogsIndexRouteImport } from './routes/dashboard/logs/index'
import { Route as DashboardWorkspacesNewIndexRouteImport } from './routes/dashboard/workspaces/new/index'
import { Route as DashboardWorkspacesWorkspaceIdIndexRouteImport } from './routes/dashboard/workspaces/$workspaceId/index'
import { Route as DashboardWorkspaceNameStatusPagesIndexRouteImport } from './routes/dashboard/$workspaceName/status-pages/index'
import { Route as DashboardWorkspaceNameMonitorsIndexRouteImport } from './routes/dashboard/$workspaceName/monitors/index'
import { Route as DashboardWorkspaceNameLogsIndexRouteImport } from './routes/dashboard/$workspaceName/logs/index'
import { Route as DashboardWorkspaceNameStatusPagesNewIndexRouteImport } from './routes/dashboard/$workspaceName/status-pages/new/index'
import { Route as DashboardWorkspaceNameMonitorsNewIndexRouteImport } from './routes/dashboard/$workspaceName/monitors/new/index'
import { Route as DashboardWorkspaceNameMonitorsIdIndexRouteImport } from './routes/dashboard/$workspaceName/monitors/$id/index'
import { Route as DashboardWorkspaceNameIncidentsIdIndexRouteImport } from './routes/dashboard/$workspaceName/incidents/$id/index'
import { Route as DashboardWorkspaceNameStatusPagesIdEditIndexRouteImport } from './routes/dashboard/$workspaceName/status-pages/$id/edit/index'
import { Route as DashboardWorkspaceNameMonitorsNewTypeIndexRouteImport } from './routes/dashboard/$workspaceName/monitors/new/$type/index'
import { Route as DashboardWorkspaceNameMonitorsIdEditIndexRouteImport } from './routes/dashboard/$workspaceName/monitors/$id/edit/index'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const StatusSlugIndexRoute = StatusSlugIndexRouteImport.update({
  id: '/status/$slug/',
  path: '/status/$slug/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardWorkspacesIndexRoute =
  DashboardWorkspacesIndexRouteImport.update({
    id: '/workspaces/',
    path: '/workspaces/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardLogsIndexRoute = DashboardLogsIndexRouteImport.update({
  id: '/logs/',
  path: '/logs/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardWorkspacesNewIndexRoute =
  DashboardWorkspacesNewIndexRouteImport.update({
    id: '/workspaces/new/',
    path: '/workspaces/new/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspacesWorkspaceIdIndexRoute =
  DashboardWorkspacesWorkspaceIdIndexRouteImport.update({
    id: '/workspaces/$workspaceId/',
    path: '/workspaces/$workspaceId/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspaceNameStatusPagesIndexRoute =
  DashboardWorkspaceNameStatusPagesIndexRouteImport.update({
    id: '/$workspaceName/status-pages/',
    path: '/$workspaceName/status-pages/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspaceNameMonitorsIndexRoute =
  DashboardWorkspaceNameMonitorsIndexRouteImport.update({
    id: '/$workspaceName/monitors/',
    path: '/$workspaceName/monitors/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspaceNameLogsIndexRoute =
  DashboardWorkspaceNameLogsIndexRouteImport.update({
    id: '/$workspaceName/logs/',
    path: '/$workspaceName/logs/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspaceNameStatusPagesNewIndexRoute =
  DashboardWorkspaceNameStatusPagesNewIndexRouteImport.update({
    id: '/$workspaceName/status-pages/new/',
    path: '/$workspaceName/status-pages/new/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspaceNameMonitorsNewIndexRoute =
  DashboardWorkspaceNameMonitorsNewIndexRouteImport.update({
    id: '/$workspaceName/monitors/new/',
    path: '/$workspaceName/monitors/new/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspaceNameMonitorsIdIndexRoute =
  DashboardWorkspaceNameMonitorsIdIndexRouteImport.update({
    id: '/$workspaceName/monitors/$id/',
    path: '/$workspaceName/monitors/$id/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspaceNameIncidentsIdIndexRoute =
  DashboardWorkspaceNameIncidentsIdIndexRouteImport.update({
    id: '/$workspaceName/incidents/$id/',
    path: '/$workspaceName/incidents/$id/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspaceNameStatusPagesIdEditIndexRoute =
  DashboardWorkspaceNameStatusPagesIdEditIndexRouteImport.update({
    id: '/$workspaceName/status-pages/$id/edit/',
    path: '/$workspaceName/status-pages/$id/edit/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspaceNameMonitorsNewTypeIndexRoute =
  DashboardWorkspaceNameMonitorsNewTypeIndexRouteImport.update({
    id: '/$workspaceName/monitors/new/$type/',
    path: '/$workspaceName/monitors/new/$type/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWorkspaceNameMonitorsIdEditIndexRoute =
  DashboardWorkspaceNameMonitorsIdEditIndexRouteImport.update({
    id: '/$workspaceName/monitors/$id/edit/',
    path: '/$workspaceName/monitors/$id/edit/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/dashboard/logs': typeof DashboardLogsIndexRoute
  '/dashboard/workspaces': typeof DashboardWorkspacesIndexRoute
  '/status/$slug': typeof StatusSlugIndexRoute
  '/dashboard/$workspaceName/logs': typeof DashboardWorkspaceNameLogsIndexRoute
  '/dashboard/$workspaceName/monitors': typeof DashboardWorkspaceNameMonitorsIndexRoute
  '/dashboard/$workspaceName/status-pages': typeof DashboardWorkspaceNameStatusPagesIndexRoute
  '/dashboard/workspaces/$workspaceId': typeof DashboardWorkspacesWorkspaceIdIndexRoute
  '/dashboard/workspaces/new': typeof DashboardWorkspacesNewIndexRoute
  '/dashboard/$workspaceName/incidents/$id': typeof DashboardWorkspaceNameIncidentsIdIndexRoute
  '/dashboard/$workspaceName/monitors/$id': typeof DashboardWorkspaceNameMonitorsIdIndexRoute
  '/dashboard/$workspaceName/monitors/new': typeof DashboardWorkspaceNameMonitorsNewIndexRoute
  '/dashboard/$workspaceName/status-pages/new': typeof DashboardWorkspaceNameStatusPagesNewIndexRoute
  '/dashboard/$workspaceName/monitors/$id/edit': typeof DashboardWorkspaceNameMonitorsIdEditIndexRoute
  '/dashboard/$workspaceName/monitors/new/$type': typeof DashboardWorkspaceNameMonitorsNewTypeIndexRoute
  '/dashboard/$workspaceName/status-pages/$id/edit': typeof DashboardWorkspaceNameStatusPagesIdEditIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/dashboard/logs': typeof DashboardLogsIndexRoute
  '/dashboard/workspaces': typeof DashboardWorkspacesIndexRoute
  '/status/$slug': typeof StatusSlugIndexRoute
  '/dashboard/$workspaceName/logs': typeof DashboardWorkspaceNameLogsIndexRoute
  '/dashboard/$workspaceName/monitors': typeof DashboardWorkspaceNameMonitorsIndexRoute
  '/dashboard/$workspaceName/status-pages': typeof DashboardWorkspaceNameStatusPagesIndexRoute
  '/dashboard/workspaces/$workspaceId': typeof DashboardWorkspacesWorkspaceIdIndexRoute
  '/dashboard/workspaces/new': typeof DashboardWorkspacesNewIndexRoute
  '/dashboard/$workspaceName/incidents/$id': typeof DashboardWorkspaceNameIncidentsIdIndexRoute
  '/dashboard/$workspaceName/monitors/$id': typeof DashboardWorkspaceNameMonitorsIdIndexRoute
  '/dashboard/$workspaceName/monitors/new': typeof DashboardWorkspaceNameMonitorsNewIndexRoute
  '/dashboard/$workspaceName/status-pages/new': typeof DashboardWorkspaceNameStatusPagesNewIndexRoute
  '/dashboard/$workspaceName/monitors/$id/edit': typeof DashboardWorkspaceNameMonitorsIdEditIndexRoute
  '/dashboard/$workspaceName/monitors/new/$type': typeof DashboardWorkspaceNameMonitorsNewTypeIndexRoute
  '/dashboard/$workspaceName/status-pages/$id/edit': typeof DashboardWorkspaceNameStatusPagesIdEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/dashboard/logs/': typeof DashboardLogsIndexRoute
  '/dashboard/workspaces/': typeof DashboardWorkspacesIndexRoute
  '/status/$slug/': typeof StatusSlugIndexRoute
  '/dashboard/$workspaceName/logs/': typeof DashboardWorkspaceNameLogsIndexRoute
  '/dashboard/$workspaceName/monitors/': typeof DashboardWorkspaceNameMonitorsIndexRoute
  '/dashboard/$workspaceName/status-pages/': typeof DashboardWorkspaceNameStatusPagesIndexRoute
  '/dashboard/workspaces/$workspaceId/': typeof DashboardWorkspacesWorkspaceIdIndexRoute
  '/dashboard/workspaces/new/': typeof DashboardWorkspacesNewIndexRoute
  '/dashboard/$workspaceName/incidents/$id/': typeof DashboardWorkspaceNameIncidentsIdIndexRoute
  '/dashboard/$workspaceName/monitors/$id/': typeof DashboardWorkspaceNameMonitorsIdIndexRoute
  '/dashboard/$workspaceName/monitors/new/': typeof DashboardWorkspaceNameMonitorsNewIndexRoute
  '/dashboard/$workspaceName/status-pages/new/': typeof DashboardWorkspaceNameStatusPagesNewIndexRoute
  '/dashboard/$workspaceName/monitors/$id/edit/': typeof DashboardWorkspaceNameMonitorsIdEditIndexRoute
  '/dashboard/$workspaceName/monitors/new/$type/': typeof DashboardWorkspaceNameMonitorsNewTypeIndexRoute
  '/dashboard/$workspaceName/status-pages/$id/edit/': typeof DashboardWorkspaceNameStatusPagesIdEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/dashboard/logs'
    | '/dashboard/workspaces'
    | '/status/$slug'
    | '/dashboard/$workspaceName/logs'
    | '/dashboard/$workspaceName/monitors'
    | '/dashboard/$workspaceName/status-pages'
    | '/dashboard/workspaces/$workspaceId'
    | '/dashboard/workspaces/new'
    | '/dashboard/$workspaceName/incidents/$id'
    | '/dashboard/$workspaceName/monitors/$id'
    | '/dashboard/$workspaceName/monitors/new'
    | '/dashboard/$workspaceName/status-pages/new'
    | '/dashboard/$workspaceName/monitors/$id/edit'
    | '/dashboard/$workspaceName/monitors/new/$type'
    | '/dashboard/$workspaceName/status-pages/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/dashboard/logs'
    | '/dashboard/workspaces'
    | '/status/$slug'
    | '/dashboard/$workspaceName/logs'
    | '/dashboard/$workspaceName/monitors'
    | '/dashboard/$workspaceName/status-pages'
    | '/dashboard/workspaces/$workspaceId'
    | '/dashboard/workspaces/new'
    | '/dashboard/$workspaceName/incidents/$id'
    | '/dashboard/$workspaceName/monitors/$id'
    | '/dashboard/$workspaceName/monitors/new'
    | '/dashboard/$workspaceName/status-pages/new'
    | '/dashboard/$workspaceName/monitors/$id/edit'
    | '/dashboard/$workspaceName/monitors/new/$type'
    | '/dashboard/$workspaceName/status-pages/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/dashboard/logs/'
    | '/dashboard/workspaces/'
    | '/status/$slug/'
    | '/dashboard/$workspaceName/logs/'
    | '/dashboard/$workspaceName/monitors/'
    | '/dashboard/$workspaceName/status-pages/'
    | '/dashboard/workspaces/$workspaceId/'
    | '/dashboard/workspaces/new/'
    | '/dashboard/$workspaceName/incidents/$id/'
    | '/dashboard/$workspaceName/monitors/$id/'
    | '/dashboard/$workspaceName/monitors/new/'
    | '/dashboard/$workspaceName/status-pages/new/'
    | '/dashboard/$workspaceName/monitors/$id/edit/'
    | '/dashboard/$workspaceName/monitors/new/$type/'
    | '/dashboard/$workspaceName/status-pages/$id/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  StatusSlugIndexRoute: typeof StatusSlugIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/status/$slug/': {
      id: '/status/$slug/'
      path: '/status/$slug'
      fullPath: '/status/$slug'
      preLoaderRoute: typeof StatusSlugIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/workspaces/': {
      id: '/dashboard/workspaces/'
      path: '/workspaces'
      fullPath: '/dashboard/workspaces'
      preLoaderRoute: typeof DashboardWorkspacesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/logs/': {
      id: '/dashboard/logs/'
      path: '/logs'
      fullPath: '/dashboard/logs'
      preLoaderRoute: typeof DashboardLogsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/workspaces/new/': {
      id: '/dashboard/workspaces/new/'
      path: '/workspaces/new'
      fullPath: '/dashboard/workspaces/new'
      preLoaderRoute: typeof DashboardWorkspacesNewIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/workspaces/$workspaceId/': {
      id: '/dashboard/workspaces/$workspaceId/'
      path: '/workspaces/$workspaceId'
      fullPath: '/dashboard/workspaces/$workspaceId'
      preLoaderRoute: typeof DashboardWorkspacesWorkspaceIdIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$workspaceName/status-pages/': {
      id: '/dashboard/$workspaceName/status-pages/'
      path: '/$workspaceName/status-pages'
      fullPath: '/dashboard/$workspaceName/status-pages'
      preLoaderRoute: typeof DashboardWorkspaceNameStatusPagesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$workspaceName/monitors/': {
      id: '/dashboard/$workspaceName/monitors/'
      path: '/$workspaceName/monitors'
      fullPath: '/dashboard/$workspaceName/monitors'
      preLoaderRoute: typeof DashboardWorkspaceNameMonitorsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$workspaceName/logs/': {
      id: '/dashboard/$workspaceName/logs/'
      path: '/$workspaceName/logs'
      fullPath: '/dashboard/$workspaceName/logs'
      preLoaderRoute: typeof DashboardWorkspaceNameLogsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$workspaceName/status-pages/new/': {
      id: '/dashboard/$workspaceName/status-pages/new/'
      path: '/$workspaceName/status-pages/new'
      fullPath: '/dashboard/$workspaceName/status-pages/new'
      preLoaderRoute: typeof DashboardWorkspaceNameStatusPagesNewIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$workspaceName/monitors/new/': {
      id: '/dashboard/$workspaceName/monitors/new/'
      path: '/$workspaceName/monitors/new'
      fullPath: '/dashboard/$workspaceName/monitors/new'
      preLoaderRoute: typeof DashboardWorkspaceNameMonitorsNewIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$workspaceName/monitors/$id/': {
      id: '/dashboard/$workspaceName/monitors/$id/'
      path: '/$workspaceName/monitors/$id'
      fullPath: '/dashboard/$workspaceName/monitors/$id'
      preLoaderRoute: typeof DashboardWorkspaceNameMonitorsIdIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$workspaceName/incidents/$id/': {
      id: '/dashboard/$workspaceName/incidents/$id/'
      path: '/$workspaceName/incidents/$id'
      fullPath: '/dashboard/$workspaceName/incidents/$id'
      preLoaderRoute: typeof DashboardWorkspaceNameIncidentsIdIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$workspaceName/status-pages/$id/edit/': {
      id: '/dashboard/$workspaceName/status-pages/$id/edit/'
      path: '/$workspaceName/status-pages/$id/edit'
      fullPath: '/dashboard/$workspaceName/status-pages/$id/edit'
      preLoaderRoute: typeof DashboardWorkspaceNameStatusPagesIdEditIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$workspaceName/monitors/new/$type/': {
      id: '/dashboard/$workspaceName/monitors/new/$type/'
      path: '/$workspaceName/monitors/new/$type'
      fullPath: '/dashboard/$workspaceName/monitors/new/$type'
      preLoaderRoute: typeof DashboardWorkspaceNameMonitorsNewTypeIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$workspaceName/monitors/$id/edit/': {
      id: '/dashboard/$workspaceName/monitors/$id/edit/'
      path: '/$workspaceName/monitors/$id/edit'
      fullPath: '/dashboard/$workspaceName/monitors/$id/edit'
      preLoaderRoute: typeof DashboardWorkspaceNameMonitorsIdEditIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardLogsIndexRoute: typeof DashboardLogsIndexRoute
  DashboardWorkspacesIndexRoute: typeof DashboardWorkspacesIndexRoute
  DashboardWorkspaceNameLogsIndexRoute: typeof DashboardWorkspaceNameLogsIndexRoute
  DashboardWorkspaceNameMonitorsIndexRoute: typeof DashboardWorkspaceNameMonitorsIndexRoute
  DashboardWorkspaceNameStatusPagesIndexRoute: typeof DashboardWorkspaceNameStatusPagesIndexRoute
  DashboardWorkspacesWorkspaceIdIndexRoute: typeof DashboardWorkspacesWorkspaceIdIndexRoute
  DashboardWorkspacesNewIndexRoute: typeof DashboardWorkspacesNewIndexRoute
  DashboardWorkspaceNameIncidentsIdIndexRoute: typeof DashboardWorkspaceNameIncidentsIdIndexRoute
  DashboardWorkspaceNameMonitorsIdIndexRoute: typeof DashboardWorkspaceNameMonitorsIdIndexRoute
  DashboardWorkspaceNameMonitorsNewIndexRoute: typeof DashboardWorkspaceNameMonitorsNewIndexRoute
  DashboardWorkspaceNameStatusPagesNewIndexRoute: typeof DashboardWorkspaceNameStatusPagesNewIndexRoute
  DashboardWorkspaceNameMonitorsIdEditIndexRoute: typeof DashboardWorkspaceNameMonitorsIdEditIndexRoute
  DashboardWorkspaceNameMonitorsNewTypeIndexRoute: typeof DashboardWorkspaceNameMonitorsNewTypeIndexRoute
  DashboardWorkspaceNameStatusPagesIdEditIndexRoute: typeof DashboardWorkspaceNameStatusPagesIdEditIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardLogsIndexRoute: DashboardLogsIndexRoute,
  DashboardWorkspacesIndexRoute: DashboardWorkspacesIndexRoute,
  DashboardWorkspaceNameLogsIndexRoute: DashboardWorkspaceNameLogsIndexRoute,
  DashboardWorkspaceNameMonitorsIndexRoute:
    DashboardWorkspaceNameMonitorsIndexRoute,
  DashboardWorkspaceNameStatusPagesIndexRoute:
    DashboardWorkspaceNameStatusPagesIndexRoute,
  DashboardWorkspacesWorkspaceIdIndexRoute:
    DashboardWorkspacesWorkspaceIdIndexRoute,
  DashboardWorkspacesNewIndexRoute: DashboardWorkspacesNewIndexRoute,
  DashboardWorkspaceNameIncidentsIdIndexRoute:
    DashboardWorkspaceNameIncidentsIdIndexRoute,
  DashboardWorkspaceNameMonitorsIdIndexRoute:
    DashboardWorkspaceNameMonitorsIdIndexRoute,
  DashboardWorkspaceNameMonitorsNewIndexRoute:
    DashboardWorkspaceNameMonitorsNewIndexRoute,
  DashboardWorkspaceNameStatusPagesNewIndexRoute:
    DashboardWorkspaceNameStatusPagesNewIndexRoute,
  DashboardWorkspaceNameMonitorsIdEditIndexRoute:
    DashboardWorkspaceNameMonitorsIdEditIndexRoute,
  DashboardWorkspaceNameMonitorsNewTypeIndexRoute:
    DashboardWorkspaceNameMonitorsNewTypeIndexRoute,
  DashboardWorkspaceNameStatusPagesIdEditIndexRoute:
    DashboardWorkspaceNameStatusPagesIdEditIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  StatusSlugIndexRoute: StatusSlugIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
